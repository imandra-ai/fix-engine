(* Imandra Inc. copyright 2022 *)
[@@@program]
[@@@import "../src-model/src-types/model_app_enums.iml"]
open Model_app_enums;;
[@@@import "../src-core-pp/parser_utils.iml"]
open Parser_utils.Parser;;


let encode_inner_ExecInst (d)  =
    (match d with
        | Ok FIX_ExecInst_NotHeld -> "1"
        | Ok FIX_ExecInst_Work -> "2"
        | Ok FIX_ExecInst_GoAlong -> "3"
        | Ok FIX_ExecInst_OverTheDay -> "4"
        | Ok FIX_ExecInst_Held -> "5"
        | Ok FIX_ExecInst_ParticipateDoNotInitiate -> "6"
        | Ok FIX_ExecInst_StrictScale -> "7"
        | Ok FIX_ExecInst_TryToScale -> "8"
        | Ok FIX_ExecInst_StayOnBidSide -> "9"
        | Ok FIX_ExecInst_StayOnOfferSide -> "0"
        | Ok FIX_ExecInst_NoCross -> "A"
        | Ok FIX_ExecInst_OKToCross -> "B"
        | Ok FIX_ExecInst_CallFirst -> "C"
        | Ok FIX_ExecInst_PercentOfVolume -> "D"
        | Ok FIX_ExecInst_DoNotIncrease -> "E"
        | Ok FIX_ExecInst_DoNotReduce -> "F"
        | Ok FIX_ExecInst_AllOrNone -> "G"
        | Ok FIX_ExecInst_ReinstateOnSystemFailure -> "H"
        | Ok FIX_ExecInst_InstitutionsOnly -> "I"
        | Ok FIX_ExecInst_ReinstateOnTradingHalt -> "J"
        | Ok FIX_ExecInst_CancelOnTradingHalt -> "K"
        | Ok FIX_ExecInst_LastPeg -> "L"
        | Ok FIX_ExecInst_MidPricePeg -> "M"
        | Ok FIX_ExecInst_NonNegotiable -> "N"
        | Ok FIX_ExecInst_OpeningPeg -> "O"
        | Ok FIX_ExecInst_MarketPeg -> "P"
        | Ok FIX_ExecInst_CancelOnSystemFailure -> "Q"
        | Ok FIX_ExecInst_PrimaryPeg -> "R"
        | Ok FIX_ExecInst_Suspend -> "S"
        | Ok FIX_ExecInst_CustomerDisplayInstruction -> "U"
        | Ok FIX_ExecInst_Netting -> "V"
        | Ok FIX_ExecInst_PegToVWAP -> "W"
        | Ok FIX_ExecInst_TradeAlong -> "X"
        | Ok FIX_ExecInst_TryToStop -> "Y"
        | Ok FIX_ExecInst_CancelIfNotBest -> "Z"
        | Ok FIX_ExecInst_TrailingStopPeg -> "a"
        | Ok FIX_ExecInst_StrictLimit -> "b"
        | Ok FIX_ExecInst_IgnorePriceValidityChecks -> "c"
        | Ok FIX_ExecInst_PegToLimitPrice -> "d"
        | Ok FIX_ExecInst_WorkToTargetStrategy -> "e"
        | Error s -> s
    )
;;

let encode_ExecInst (d)  =
    list_to_split (List.map encode_inner_ExecInst d) ' '
;;

let encode_ExecType (d)  =
    (match d with
        | Ok FIX_ExecType_New -> "0"
        | Ok FIX_ExecType_DoneForDay -> "3"
        | Ok FIX_ExecType_Canceled -> "4"
        | Ok FIX_ExecType_Replaced -> "5"
        | Ok FIX_ExecType_PendingCancel -> "6"
        | Ok FIX_ExecType_Stopped -> "7"
        | Ok FIX_ExecType_Rejected -> "8"
        | Ok FIX_ExecType_Suspended -> "9"
        | Ok FIX_ExecType_PendingNew -> "A"
        | Ok FIX_ExecType_Calculated -> "B"
        | Ok FIX_ExecType_Expired -> "C"
        | Ok FIX_ExecType_Restated -> "D"
        | Ok FIX_ExecType_PendingReplace -> "E"
        | Ok FIX_ExecType_Trade -> "F"
        | Ok FIX_ExecType_TradeCorrect -> "G"
        | Ok FIX_ExecType_TradeCancel -> "H"
        | Ok FIX_ExecType_OrderStatus -> "I"
        | Error s -> s
    )
;;

let encode_OrdStatus (d)  =
    (match d with
        | Ok FIX_OrdStatus_New -> "0"
        | Ok FIX_OrdStatus_PartiallyFilled -> "1"
        | Ok FIX_OrdStatus_Filled -> "2"
        | Ok FIX_OrdStatus_DoneForDay -> "3"
        | Ok FIX_OrdStatus_Canceled -> "4"
        | Ok FIX_OrdStatus_PendingCancel -> "6"
        | Ok FIX_OrdStatus_Stopped -> "7"
        | Ok FIX_OrdStatus_Rejected -> "8"
        | Ok FIX_OrdStatus_Suspended -> "9"
        | Ok FIX_OrdStatus_PendingNew -> "A"
        | Ok FIX_OrdStatus_Calculated -> "B"
        | Ok FIX_OrdStatus_Expired -> "C"
        | Ok FIX_OrdStatus_AcceptedForBidding -> "D"
        | Ok FIX_OrdStatus_PendingReplace -> "E"
        | Ok FIX_OrdStatus_Replaced -> "5"
        | Error s -> s
    )
;;

let encode_OrdType (d)  =
    (match d with
        | Ok FIX_OrdType_Market -> "1"
        | Ok FIX_OrdType_Limit -> "2"
        | Ok FIX_OrdType_Stop -> "3"
        | Ok FIX_OrdType_StopLimit -> "4"
        | Ok FIX_OrdType_WithOrWithout -> "6"
        | Ok FIX_OrdType_LimitOrBetter -> "7"
        | Ok FIX_OrdType_LimitWithOrWithout -> "8"
        | Ok FIX_OrdType_OnBasis -> "9"
        | Ok FIX_OrdType_PreviouslyQuoted -> "D"
        | Ok FIX_OrdType_PreviouslyIndicated -> "E"
        | Ok FIX_OrdType_ForexSwap -> "G"
        | Ok FIX_OrdType_Funari -> "I"
        | Ok FIX_OrdType_MarketIfTouched -> "J"
        | Ok FIX_OrdType_MarketWithLeftOverAsLimit -> "K"
        | Ok FIX_OrdType_PreviousFundValuationPoint -> "L"
        | Ok FIX_OrdType_NextFundValuationPoint -> "M"
        | Ok FIX_OrdType_Pegged -> "P"
        | Ok FIX_OrdType_StopSpread -> "s"
        | Error s -> s
    )
;;

let encode_PartySubIDType (d)  =
    (match d with
        | Ok FIX_PartySubIDType_Firm -> "1"
        | Ok FIX_PartySubIDType_Person -> "2"
        | Ok FIX_PartySubIDType_System -> "3"
        | Ok FIX_PartySubIDType_Application -> "4"
        | Ok FIX_PartySubIDType_FullLegalNameOfFirm -> "5"
        | Ok FIX_PartySubIDType_PostalAddress -> "6"
        | Ok FIX_PartySubIDType_PhoneNumber -> "7"
        | Ok FIX_PartySubIDType_EmailAddress -> "8"
        | Ok FIX_PartySubIDType_ContactName -> "9"
        | Ok FIX_PartySubIDType_SecuritiesAccountNumber -> "10"
        | Ok FIX_PartySubIDType_RegistrationNumber -> "11"
        | Ok FIX_PartySubIDType_RegisteredAddressForConfirmation -> "12"
        | Ok FIX_PartySubIDType_RegulatoryStatus -> "13"
        | Ok FIX_PartySubIDType_RegistrationName -> "14"
        | Ok FIX_PartySubIDType_CashAccountNumber -> "15"
        | Ok FIX_PartySubIDType_BIC -> "16"
        | Ok FIX_PartySubIDType_CSDParticipantMemberCode -> "17"
        | Ok FIX_PartySubIDType_RegisteredAddress -> "18"
        | Ok FIX_PartySubIDType_FundAccountName -> "19"
        | Ok FIX_PartySubIDType_TelexNumber -> "20"
        | Ok FIX_PartySubIDType_FaxNumber -> "21"
        | Ok FIX_PartySubIDType_SecuritiesAccountName -> "22"
        | Ok FIX_PartySubIDType_CashAccountName -> "23"
        | Ok FIX_PartySubIDType_Department -> "24"
        | Ok FIX_PartySubIDType_LocationDesk -> "25"
        | Ok FIX_PartySubIDType_PositionAccountType -> "26"
        | Error s -> s
    )
;;

let encode_Side (d)  =
    (match d with
        | Ok FIX_Side_Buy -> "1"
        | Ok FIX_Side_Sell -> "2"
        | Ok FIX_Side_BuyMinus -> "3"
        | Ok FIX_Side_SellPlus -> "4"
        | Ok FIX_Side_SellShort -> "5"
        | Ok FIX_Side_SellShortExempt -> "6"
        | Ok FIX_Side_Undisclosed -> "7"
        | Ok FIX_Side_Cross -> "8"
        | Ok FIX_Side_CrossShort -> "9"
        | Ok FIX_Side_CrossShortExempt -> "A"
        | Ok FIX_Side_AsDefined -> "B"
        | Ok FIX_Side_Opposite -> "C"
        | Ok FIX_Side_Subscribe -> "D"
        | Ok FIX_Side_Redeem -> "E"
        | Ok FIX_Side_Lend -> "F"
        | Ok FIX_Side_Borrow -> "G"
        | Error s -> s
    )
;;

[@@@logic]
