(* Imandra Inc. copyright 2022 *)
[@@@import "../../src-core/datetime.iml"]
open Datetime;;
[@@@import "../../src-core/numeric.iml"]
open Numeric;;
[@@@import "../../src-core-time-defaults/time_defaults.iml"]
open Time_defaults;;


type model_fix_inner_ptyssubgrp = {
    mod_f_PtysSubGrp_PartySubID : LString.t option
}
;;

type model_fix_rec_ptyssubgrp = {
    rg_PtysSubGrp_element_0 : model_fix_inner_ptyssubgrp option;
    rg_PtysSubGrp_element_1 : model_fix_inner_ptyssubgrp option;
    rg_PtysSubGrp_element_2 : model_fix_inner_ptyssubgrp option;
    rg_PtysSubGrp_element_3 : model_fix_inner_ptyssubgrp option;
    rg_PtysSubGrp_element_4 : model_fix_inner_ptyssubgrp option
}
;;

type model_fix_inner_parties = {
    mod_f_Parties_PartyID : LString.t;
    mod_f_Parties_PartyIndex : int;
    mod_f_Parties_PtysSubGrp : model_fix_rec_ptyssubgrp
}
;;

type model_fix_rec_parties = {
    rg_Parties_element_0 : model_fix_inner_parties option;
    rg_Parties_element_1 : model_fix_inner_parties option;
    rg_Parties_element_2 : model_fix_inner_parties option;
    rg_Parties_element_3 : model_fix_inner_parties option;
    rg_Parties_element_4 : model_fix_inner_parties option
}
;;

let rg_count_ptyssubgrp (x : model_fix_rec_ptyssubgrp)  : int option =
    let y = 0
    in
    let y = (+) ((match x.rg_PtysSubGrp_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y
    in
    let y = (+) ((match x.rg_PtysSubGrp_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y
    in
    let y = (+) ((match x.rg_PtysSubGrp_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y
    in
    let y = (+) ((match x.rg_PtysSubGrp_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y
    in
    let y = (+) ((match x.rg_PtysSubGrp_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y
    in
    (if ((=) y 0) then
        None
    else
        (Some y))
;;

let rg_count_parties (x : model_fix_rec_parties)  : int option =
    let y = 0
    in
    let y = (+) ((match x.rg_Parties_element_4 with
        | None -> 0
        | Some _ -> 1
    )
    ) y
    in
    let y = (+) ((match x.rg_Parties_element_3 with
        | None -> 0
        | Some _ -> 1
    )
    ) y
    in
    let y = (+) ((match x.rg_Parties_element_2 with
        | None -> 0
        | Some _ -> 1
    )
    ) y
    in
    let y = (+) ((match x.rg_Parties_element_1 with
        | None -> 0
        | Some _ -> 1
    )
    ) y
    in
    let y = (+) ((match x.rg_Parties_element_0 with
        | None -> 0
        | Some _ -> 1
    )
    ) y
    in
    (if ((=) y 0) then
        None
    else
        (Some y))
;;

type repeating_group_defs = 
    | MOD_FIX_Repeating_Group_PtysSubGrp of model_fix_rec_ptyssubgrp
    | MOD_FIX_Repeating_Group_Parties of model_fix_rec_parties
;;

